/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as AuthUsersIndexImport } from './routes/_auth/users/index'
import { Route as AuthQuizzesIndexImport } from './routes/_auth/quizzes/index'
import { Route as authRegisterIndexImport } from './routes/(auth)/register/index'
import { Route as authLoginIndexImport } from './routes/(auth)/login/index'
import { Route as AuthQuizzesQuizIdIndexImport } from './routes/_auth/quizzes/$quizId/index'
import { Route as AuthQuizzesQuizIdViewIndexImport } from './routes/_auth/quizzes/$quizId/view/index'
import { Route as AuthQuizzesQuizIdEditIndexImport } from './routes/_auth/quizzes/$quizId/edit/index'
import { Route as AuthQuizzesQuizIdAnswerIndexImport } from './routes/_auth/quizzes/$quizId/answer/index'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUsersIndexRoute = AuthUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthQuizzesIndexRoute = AuthQuizzesIndexImport.update({
  id: '/quizzes/',
  path: '/quizzes/',
  getParentRoute: () => AuthRoute,
} as any)

const authRegisterIndexRoute = authRegisterIndexImport.update({
  id: '/(auth)/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const authLoginIndexRoute = authLoginIndexImport.update({
  id: '/(auth)/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const AuthQuizzesQuizIdIndexRoute = AuthQuizzesQuizIdIndexImport.update({
  id: '/quizzes/$quizId/',
  path: '/quizzes/$quizId/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthQuizzesQuizIdViewIndexRoute = AuthQuizzesQuizIdViewIndexImport.update(
  {
    id: '/quizzes/$quizId/view/',
    path: '/quizzes/$quizId/view/',
    getParentRoute: () => AuthRoute,
  } as any,
)

const AuthQuizzesQuizIdEditIndexRoute = AuthQuizzesQuizIdEditIndexImport.update(
  {
    id: '/quizzes/$quizId/edit/',
    path: '/quizzes/$quizId/edit/',
    getParentRoute: () => AuthRoute,
  } as any,
)

const AuthQuizzesQuizIdAnswerIndexRoute =
  AuthQuizzesQuizIdAnswerIndexImport.update({
    id: '/quizzes/$quizId/answer/',
    path: '/quizzes/$quizId/answer/',
    getParentRoute: () => AuthRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/(auth)/login/': {
      id: '/(auth)/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register/': {
      id: '/(auth)/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth/quizzes/': {
      id: '/_auth/quizzes/'
      path: '/quizzes'
      fullPath: '/quizzes'
      preLoaderRoute: typeof AuthQuizzesIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users/': {
      id: '/_auth/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthUsersIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/quizzes/$quizId/': {
      id: '/_auth/quizzes/$quizId/'
      path: '/quizzes/$quizId'
      fullPath: '/quizzes/$quizId'
      preLoaderRoute: typeof AuthQuizzesQuizIdIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/quizzes/$quizId/answer/': {
      id: '/_auth/quizzes/$quizId/answer/'
      path: '/quizzes/$quizId/answer'
      fullPath: '/quizzes/$quizId/answer'
      preLoaderRoute: typeof AuthQuizzesQuizIdAnswerIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/quizzes/$quizId/edit/': {
      id: '/_auth/quizzes/$quizId/edit/'
      path: '/quizzes/$quizId/edit'
      fullPath: '/quizzes/$quizId/edit'
      preLoaderRoute: typeof AuthQuizzesQuizIdEditIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/quizzes/$quizId/view/': {
      id: '/_auth/quizzes/$quizId/view/'
      path: '/quizzes/$quizId/view'
      fullPath: '/quizzes/$quizId/view'
      preLoaderRoute: typeof AuthQuizzesQuizIdViewIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthIndexRoute: typeof AuthIndexRoute
  AuthQuizzesIndexRoute: typeof AuthQuizzesIndexRoute
  AuthUsersIndexRoute: typeof AuthUsersIndexRoute
  AuthQuizzesQuizIdIndexRoute: typeof AuthQuizzesQuizIdIndexRoute
  AuthQuizzesQuizIdAnswerIndexRoute: typeof AuthQuizzesQuizIdAnswerIndexRoute
  AuthQuizzesQuizIdEditIndexRoute: typeof AuthQuizzesQuizIdEditIndexRoute
  AuthQuizzesQuizIdViewIndexRoute: typeof AuthQuizzesQuizIdViewIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthIndexRoute: AuthIndexRoute,
  AuthQuizzesIndexRoute: AuthQuizzesIndexRoute,
  AuthUsersIndexRoute: AuthUsersIndexRoute,
  AuthQuizzesQuizIdIndexRoute: AuthQuizzesQuizIdIndexRoute,
  AuthQuizzesQuizIdAnswerIndexRoute: AuthQuizzesQuizIdAnswerIndexRoute,
  AuthQuizzesQuizIdEditIndexRoute: AuthQuizzesQuizIdEditIndexRoute,
  AuthQuizzesQuizIdViewIndexRoute: AuthQuizzesQuizIdViewIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteWithChildren
  '/': typeof AuthIndexRoute
  '/login': typeof authLoginIndexRoute
  '/register': typeof authRegisterIndexRoute
  '/quizzes': typeof AuthQuizzesIndexRoute
  '/users': typeof AuthUsersIndexRoute
  '/quizzes/$quizId': typeof AuthQuizzesQuizIdIndexRoute
  '/quizzes/$quizId/answer': typeof AuthQuizzesQuizIdAnswerIndexRoute
  '/quizzes/$quizId/edit': typeof AuthQuizzesQuizIdEditIndexRoute
  '/quizzes/$quizId/view': typeof AuthQuizzesQuizIdViewIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof AuthIndexRoute
  '/login': typeof authLoginIndexRoute
  '/register': typeof authRegisterIndexRoute
  '/quizzes': typeof AuthQuizzesIndexRoute
  '/users': typeof AuthUsersIndexRoute
  '/quizzes/$quizId': typeof AuthQuizzesQuizIdIndexRoute
  '/quizzes/$quizId/answer': typeof AuthQuizzesQuizIdAnswerIndexRoute
  '/quizzes/$quizId/edit': typeof AuthQuizzesQuizIdEditIndexRoute
  '/quizzes/$quizId/view': typeof AuthQuizzesQuizIdViewIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_auth/': typeof AuthIndexRoute
  '/(auth)/login/': typeof authLoginIndexRoute
  '/(auth)/register/': typeof authRegisterIndexRoute
  '/_auth/quizzes/': typeof AuthQuizzesIndexRoute
  '/_auth/users/': typeof AuthUsersIndexRoute
  '/_auth/quizzes/$quizId/': typeof AuthQuizzesQuizIdIndexRoute
  '/_auth/quizzes/$quizId/answer/': typeof AuthQuizzesQuizIdAnswerIndexRoute
  '/_auth/quizzes/$quizId/edit/': typeof AuthQuizzesQuizIdEditIndexRoute
  '/_auth/quizzes/$quizId/view/': typeof AuthQuizzesQuizIdViewIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/login'
    | '/register'
    | '/quizzes'
    | '/users'
    | '/quizzes/$quizId'
    | '/quizzes/$quizId/answer'
    | '/quizzes/$quizId/edit'
    | '/quizzes/$quizId/view'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/quizzes'
    | '/users'
    | '/quizzes/$quizId'
    | '/quizzes/$quizId/answer'
    | '/quizzes/$quizId/edit'
    | '/quizzes/$quizId/view'
  id:
    | '__root__'
    | '/_auth'
    | '/_auth/'
    | '/(auth)/login/'
    | '/(auth)/register/'
    | '/_auth/quizzes/'
    | '/_auth/users/'
    | '/_auth/quizzes/$quizId/'
    | '/_auth/quizzes/$quizId/answer/'
    | '/_auth/quizzes/$quizId/edit/'
    | '/_auth/quizzes/$quizId/view/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  authLoginIndexRoute: typeof authLoginIndexRoute
  authRegisterIndexRoute: typeof authRegisterIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  authLoginIndexRoute: authLoginIndexRoute,
  authRegisterIndexRoute: authRegisterIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/(auth)/login/",
        "/(auth)/register/"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/",
        "/_auth/quizzes/",
        "/_auth/users/",
        "/_auth/quizzes/$quizId/",
        "/_auth/quizzes/$quizId/answer/",
        "/_auth/quizzes/$quizId/edit/",
        "/_auth/quizzes/$quizId/view/"
      ]
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/(auth)/login/": {
      "filePath": "(auth)/login/index.tsx"
    },
    "/(auth)/register/": {
      "filePath": "(auth)/register/index.tsx"
    },
    "/_auth/quizzes/": {
      "filePath": "_auth/quizzes/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/": {
      "filePath": "_auth/users/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/quizzes/$quizId/": {
      "filePath": "_auth/quizzes/$quizId/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/quizzes/$quizId/answer/": {
      "filePath": "_auth/quizzes/$quizId/answer/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/quizzes/$quizId/edit/": {
      "filePath": "_auth/quizzes/$quizId/edit/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/quizzes/$quizId/view/": {
      "filePath": "_auth/quizzes/$quizId/view/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
