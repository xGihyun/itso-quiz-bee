/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthedImport } from './routes/_authed'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthedIndexImport } from './routes/_authed/index'
import { Route as AuthedUsersIndexImport } from './routes/_authed/users/index'
import { Route as AuthedQuizzesIndexImport } from './routes/_authed/quizzes/index'
import { Route as AuthRegisterIndexImport } from './routes/_auth/register/index'
import { Route as AuthLoginIndexImport } from './routes/_auth/login/index'
import { Route as AuthedQuizzesQuizIdIndexImport } from './routes/_authed/quizzes/$quizId/index'
import { Route as AuthedQuizzesQuizIdViewIndexImport } from './routes/_authed/quizzes/$quizId/view/index'
import { Route as AuthedQuizzesQuizIdEditIndexImport } from './routes/_authed/quizzes/$quizId/edit/index'
import { Route as AuthedQuizzesQuizIdAnswerIndexImport } from './routes/_authed/quizzes/$quizId/answer/index'

// Create/Update Routes

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthedIndexRoute = AuthedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedUsersIndexRoute = AuthedUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedQuizzesIndexRoute = AuthedQuizzesIndexImport.update({
  id: '/quizzes/',
  path: '/quizzes/',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthRegisterIndexRoute = AuthRegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthedQuizzesQuizIdIndexRoute = AuthedQuizzesQuizIdIndexImport.update({
  id: '/quizzes/$quizId/',
  path: '/quizzes/$quizId/',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedQuizzesQuizIdViewIndexRoute =
  AuthedQuizzesQuizIdViewIndexImport.update({
    id: '/quizzes/$quizId/view/',
    path: '/quizzes/$quizId/view/',
    getParentRoute: () => AuthedRoute,
  } as any)

const AuthedQuizzesQuizIdEditIndexRoute =
  AuthedQuizzesQuizIdEditIndexImport.update({
    id: '/quizzes/$quizId/edit/',
    path: '/quizzes/$quizId/edit/',
    getParentRoute: () => AuthedRoute,
  } as any)

const AuthedQuizzesQuizIdAnswerIndexRoute =
  AuthedQuizzesQuizIdAnswerIndexImport.update({
    id: '/quizzes/$quizId/answer/',
    path: '/quizzes/$quizId/answer/',
    getParentRoute: () => AuthedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/_authed/': {
      id: '/_authed/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthedIndexImport
      parentRoute: typeof AuthedImport
    }
    '/_auth/login/': {
      id: '/_auth/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register/': {
      id: '/_auth/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterIndexImport
      parentRoute: typeof AuthImport
    }
    '/_authed/quizzes/': {
      id: '/_authed/quizzes/'
      path: '/quizzes'
      fullPath: '/quizzes'
      preLoaderRoute: typeof AuthedQuizzesIndexImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/users/': {
      id: '/_authed/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthedUsersIndexImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/quizzes/$quizId/': {
      id: '/_authed/quizzes/$quizId/'
      path: '/quizzes/$quizId'
      fullPath: '/quizzes/$quizId'
      preLoaderRoute: typeof AuthedQuizzesQuizIdIndexImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/quizzes/$quizId/answer/': {
      id: '/_authed/quizzes/$quizId/answer/'
      path: '/quizzes/$quizId/answer'
      fullPath: '/quizzes/$quizId/answer'
      preLoaderRoute: typeof AuthedQuizzesQuizIdAnswerIndexImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/quizzes/$quizId/edit/': {
      id: '/_authed/quizzes/$quizId/edit/'
      path: '/quizzes/$quizId/edit'
      fullPath: '/quizzes/$quizId/edit'
      preLoaderRoute: typeof AuthedQuizzesQuizIdEditIndexImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/quizzes/$quizId/view/': {
      id: '/_authed/quizzes/$quizId/view/'
      path: '/quizzes/$quizId/view'
      fullPath: '/quizzes/$quizId/view'
      preLoaderRoute: typeof AuthedQuizzesQuizIdViewIndexImport
      parentRoute: typeof AuthedImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthRegisterIndexRoute: typeof AuthRegisterIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthRegisterIndexRoute: AuthRegisterIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface AuthedRouteChildren {
  AuthedIndexRoute: typeof AuthedIndexRoute
  AuthedQuizzesIndexRoute: typeof AuthedQuizzesIndexRoute
  AuthedUsersIndexRoute: typeof AuthedUsersIndexRoute
  AuthedQuizzesQuizIdIndexRoute: typeof AuthedQuizzesQuizIdIndexRoute
  AuthedQuizzesQuizIdAnswerIndexRoute: typeof AuthedQuizzesQuizIdAnswerIndexRoute
  AuthedQuizzesQuizIdEditIndexRoute: typeof AuthedQuizzesQuizIdEditIndexRoute
  AuthedQuizzesQuizIdViewIndexRoute: typeof AuthedQuizzesQuizIdViewIndexRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedIndexRoute: AuthedIndexRoute,
  AuthedQuizzesIndexRoute: AuthedQuizzesIndexRoute,
  AuthedUsersIndexRoute: AuthedUsersIndexRoute,
  AuthedQuizzesQuizIdIndexRoute: AuthedQuizzesQuizIdIndexRoute,
  AuthedQuizzesQuizIdAnswerIndexRoute: AuthedQuizzesQuizIdAnswerIndexRoute,
  AuthedQuizzesQuizIdEditIndexRoute: AuthedQuizzesQuizIdEditIndexRoute,
  AuthedQuizzesQuizIdViewIndexRoute: AuthedQuizzesQuizIdViewIndexRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthedRouteWithChildren
  '/': typeof AuthedIndexRoute
  '/login': typeof AuthLoginIndexRoute
  '/register': typeof AuthRegisterIndexRoute
  '/quizzes': typeof AuthedQuizzesIndexRoute
  '/users': typeof AuthedUsersIndexRoute
  '/quizzes/$quizId': typeof AuthedQuizzesQuizIdIndexRoute
  '/quizzes/$quizId/answer': typeof AuthedQuizzesQuizIdAnswerIndexRoute
  '/quizzes/$quizId/edit': typeof AuthedQuizzesQuizIdEditIndexRoute
  '/quizzes/$quizId/view': typeof AuthedQuizzesQuizIdViewIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/': typeof AuthedIndexRoute
  '/login': typeof AuthLoginIndexRoute
  '/register': typeof AuthRegisterIndexRoute
  '/quizzes': typeof AuthedQuizzesIndexRoute
  '/users': typeof AuthedUsersIndexRoute
  '/quizzes/$quizId': typeof AuthedQuizzesQuizIdIndexRoute
  '/quizzes/$quizId/answer': typeof AuthedQuizzesQuizIdAnswerIndexRoute
  '/quizzes/$quizId/edit': typeof AuthedQuizzesQuizIdEditIndexRoute
  '/quizzes/$quizId/view': typeof AuthedQuizzesQuizIdViewIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_authed': typeof AuthedRouteWithChildren
  '/_authed/': typeof AuthedIndexRoute
  '/_auth/login/': typeof AuthLoginIndexRoute
  '/_auth/register/': typeof AuthRegisterIndexRoute
  '/_authed/quizzes/': typeof AuthedQuizzesIndexRoute
  '/_authed/users/': typeof AuthedUsersIndexRoute
  '/_authed/quizzes/$quizId/': typeof AuthedQuizzesQuizIdIndexRoute
  '/_authed/quizzes/$quizId/answer/': typeof AuthedQuizzesQuizIdAnswerIndexRoute
  '/_authed/quizzes/$quizId/edit/': typeof AuthedQuizzesQuizIdEditIndexRoute
  '/_authed/quizzes/$quizId/view/': typeof AuthedQuizzesQuizIdViewIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/login'
    | '/register'
    | '/quizzes'
    | '/users'
    | '/quizzes/$quizId'
    | '/quizzes/$quizId/answer'
    | '/quizzes/$quizId/edit'
    | '/quizzes/$quizId/view'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/'
    | '/login'
    | '/register'
    | '/quizzes'
    | '/users'
    | '/quizzes/$quizId'
    | '/quizzes/$quizId/answer'
    | '/quizzes/$quizId/edit'
    | '/quizzes/$quizId/view'
  id:
    | '__root__'
    | '/_auth'
    | '/_authed'
    | '/_authed/'
    | '/_auth/login/'
    | '/_auth/register/'
    | '/_authed/quizzes/'
    | '/_authed/users/'
    | '/_authed/quizzes/$quizId/'
    | '/_authed/quizzes/$quizId/answer/'
    | '/_authed/quizzes/$quizId/edit/'
    | '/_authed/quizzes/$quizId/view/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  AuthedRoute: typeof AuthedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  AuthedRoute: AuthedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_authed"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login/",
        "/_auth/register/"
      ]
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/",
        "/_authed/quizzes/",
        "/_authed/users/",
        "/_authed/quizzes/$quizId/",
        "/_authed/quizzes/$quizId/answer/",
        "/_authed/quizzes/$quizId/edit/",
        "/_authed/quizzes/$quizId/view/"
      ]
    },
    "/_authed/": {
      "filePath": "_authed/index.tsx",
      "parent": "/_authed"
    },
    "/_auth/login/": {
      "filePath": "_auth/login/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/register/": {
      "filePath": "_auth/register/index.tsx",
      "parent": "/_auth"
    },
    "/_authed/quizzes/": {
      "filePath": "_authed/quizzes/index.tsx",
      "parent": "/_authed"
    },
    "/_authed/users/": {
      "filePath": "_authed/users/index.tsx",
      "parent": "/_authed"
    },
    "/_authed/quizzes/$quizId/": {
      "filePath": "_authed/quizzes/$quizId/index.tsx",
      "parent": "/_authed"
    },
    "/_authed/quizzes/$quizId/answer/": {
      "filePath": "_authed/quizzes/$quizId/answer/index.tsx",
      "parent": "/_authed"
    },
    "/_authed/quizzes/$quizId/edit/": {
      "filePath": "_authed/quizzes/$quizId/edit/index.tsx",
      "parent": "/_authed"
    },
    "/_authed/quizzes/$quizId/view/": {
      "filePath": "_authed/quizzes/$quizId/view/index.tsx",
      "parent": "/_authed"
    }
  }
}
ROUTE_MANIFEST_END */
